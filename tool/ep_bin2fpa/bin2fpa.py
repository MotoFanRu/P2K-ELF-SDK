#!/usr/bin/env python

"""
bin2fpa.py script by EXL, 28-Nov-2023

Generate Flash & Backup 3 patches from binary data.
"""

import sys


def generate_fpa(firmware, author, description, address, hex_data, file):
	file.write('; This patch file was generated by bin2fpa.py script.\r\n')
	file.write('[Patch_Info]\r\n')
	file.write(f'SW_Ver={firmware}\r\n')
	file.write(f'Author={author}\r\n')
	file.write(f'Description={description}\r\n')
	file.write('[Patch_Code]\r\n')
	file.write(f'{address}: {hex_data}\r\n')


def bin2fpa(firmware, author, description, address, binary):
	if '.bin' in binary:
		fpa = binary.replace('.bin', '.fpa')
		with open(binary, 'rb') as input, open(fpa, 'w') as output:
			hex_data = input.read().hex().upper()

			address_dec = int(address, 16)
			addr = f'{address_dec:08X}'
			generate_fpa(firmware, author, description, addr, hex_data, output)

	else:
		print(f'Error: "{binary}" file does not contain ".bin" extension in filename!')


if __name__ == '__main__':
	if len(sys.argv) == 6:
		bin2fpa(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5])
	else:
		print('bin2fpa.py script by EXL, 28-Nov-2023')
		print('Generate Flash & Backup 3 patches from binary data.')
		print()
		print('Usage:\n\t./bin2fpa.py [firmware] [author] [description] [address] [binary]')
		print('Example:\n\t./bin2fpa.py "R373_G_0E.30.49R" "EXL" "Cool Patch" 0x10080000 ElfPack.bin')
