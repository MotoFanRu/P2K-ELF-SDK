# forge/patcher.py

import logging
from pathlib import Path

from .hexer import int2hex_r


def generate_fpa(firmware: str, author: str, description: str, address: str, hex_data: str, file: Path) -> bool:
	if len(hex_data.strip()) > 0:
		with file.open(mode='w', newline='\r\n') as f_o:
			f_o.write('; This patch file was generated by forge library.\n')
			f_o.write('[Patch_Info]\n')
			f_o.write(f'SW_Ver={firmware}\n')
			f_o.write(f'Author={author}\n')
			f_o.write(f'Description={description}\n')
			f_o.write('[Patch_Code]\n')
			f_o.write(f'{address}: {hex_data}\n')
		return True
	else:
		logging.error(f'Patch data is empty.')
		return False


def bin2fpa(firmware: str, autor: str, description: str, address: int, binary: Path) -> bool:
	if binary.is_file() and binary.exists():
		bin_str = str(binary)
		if '.bin' in bin_str:
			fpa = Path(bin_str.replace('.bin', '.fpa'))
			with binary.open(mode='rb') as f_i:
				hex_data = f_i.read().hex().upper()
				return generate_fpa(firmware, autor, description, int2hex_r(address), hex_data, fpa)
		else:
			logging.error(f'Check binary "*.bin" file extension.')
	else:
		logging.error(f'Binary file {binary} is not exist.')
	return False
