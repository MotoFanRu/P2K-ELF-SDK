cmake_minimum_required(VERSION 3.16)

set(CMAKE_SYSTEM_NAME "Generic")
set(CMAKE_SYSTEM_PROCESSOR "ARM")

if(CMAKE_HOST_WIN32)
	set(TOOLCHAIN_DIRECTORY "${P2K_TOOLCHAIN_ROOT}/tool/compiler/ARM-ADS-WIN/bin")
elseif(CMAKE_HOST_UNIX)
	set(TOOLCHAIN_DIRECTORY "${P2K_TOOLCHAIN_ROOT}/tool/compiler/ARM-ADS-LIN/bin")
else()
	message(FATAL_ERROR "Unknown OS for CMake!")
endif()

if(CPU_MODE STREQUAL "thumb")
	set(CMAKE_C_COMPILER "${TOOLCHAIN_DIRECTORY}/tcc")
	set(CMAKE_CXX_COMPILER "${TOOLCHAIN_DIRECTORY}/tcpp")
elseif(CPU_MODE STREQUAL "arm")
	set(CMAKE_C_COMPILER "${TOOLCHAIN_DIRECTORY}/armcc")
	set(CMAKE_CXX_COMPILER "${TOOLCHAIN_DIRECTORY}/armcpp")
else()
	message(FATAL_ERROR "Please set '$CPU_MODE' to 'thumb' or 'arm'!")
endif()
set(CMAKE_ASM_COMPILER "${TOOLCHAIN_DIRECTORY}/armasm")
set(CMAKE_AR "${TOOLCHAIN_DIRECTORY}/armar")
set(CMAKE_C_LINK_EXECUTABLE "${TOOLCHAIN_DIRECTORY}/armlink")
set(CMAKE_CXX_LINK_EXECUTABLE "${TOOLCHAIN_DIRECTORY}/armlink")
if(CMAKE_HOST_WIN32)
	set(CMAKE_C_COMPILER "${CMAKE_C_COMPILER}.exe")
	set(CMAKE_CXX_COMPILER "${CMAKE_CXX_COMPILER}.exe")
	set(CMAKE_ASM_COMPILER "${CMAKE_ASM_COMPILER}.exe")
	set(CMAKE_AR "${CMAKE_AR}.exe")
	set(CMAKE_C_LINK_EXECUTABLE "${CMAKE_C_LINK_EXECUTABLE}.exe")
	set(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE}.exe")
endif()

set(CMAKE_C_COMPILER_ID "ADS")
set(CMAKE_C_COMPILER_ID_RUN TRUE)
set(CMAKE_C_COMPILER_FORCED TRUE)
set(CMAKE_CXX_COMPILER_ID "ADS")
set(CMAKE_CXX_COMPILER_ID_RUN TRUE)
set(CMAKE_CXX_COMPILER_FORCED TRUE)
#set(CMAKE_ASM_COMPILER_ID "ARMCC")
set(CMAKE_ASM_COMPILER_ID "ADS")

set(P2K_DIRECTORY_HEADERS_SDK "${P2K_TOOLCHAIN_ROOT}/ep/sdk")
set(P2K_DIRECTORY_HEADERS_LIBRARIES "${P2K_TOOLCHAIN_ROOT}/ep/ep1/inc")
set(P2K_DIRECTORY_LIBRARIES "${P2K_TOOLCHAIN_ROOT}/ep/ep1/lib")

set(P2K_GENERAL_DEFINES_FLAGS "-D__P2K__ -DEP1")
set(P2K_GENERAL_OPTIMIZATION_FLAGS "-O2")
set(P2K_LIB_NAME "Lib")
set(P2K_OBJ_FILE "libstd.o")
set(P2K_LIB_FILE "libstd.a")

if(CPU_MODE STREQUAL "thumb")
	set(P2K_GENERAL_C_FLAGS "-bigend -apcs /interwork")
	set(P2K_GENERAL_CXX_FLAGS "-bigend -apcs /interwork")
	set(P2K_GENERAL_ASM_FLAGS "-16 -bi -apcs /interwork")
	if(CMAKE_HOST_WIN32)
		set(P2K_GENERAL_C_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}(${P2K_LIB_NAME}) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
		set(P2K_GENERAL_CXX_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}(${P2K_LIB_NAME}) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
	else()
		set(P2K_GENERAL_C_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}\\(${P2K_LIB_NAME}\\) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
		set(P2K_GENERAL_CXX_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}\\(${P2K_LIB_NAME}\\) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
	endif()
elseif(CPU_MODE STREQUAL "arm")
	set(P2K_GENERAL_C_FLAGS "-bigend -apcs /interwork")
	set(P2K_GENERAL_CXX_FLAGS "-bigend -apcs /interwork")
	set(P2K_GENERAL_ASM_FLAGS "-32 -bi -apcs /interwork")
	if(CMAKE_HOST_WIN32)
		set(P2K_GENERAL_C_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}(${P2K_LIB_NAME}) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
		set(P2K_GENERAL_CXX_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}(${P2K_LIB_NAME}) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
	else()
		set(P2K_GENERAL_C_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}\\(${P2K_LIB_NAME}\\) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
		set(P2K_GENERAL_CXX_LINK_FLAGS
			"-nolocals -reloc -first ${P2K_OBJ_FILE}\\(${P2K_LIB_NAME}\\) ${P2K_DIRECTORY_LIBRARIES}/${P2K_LIB_FILE}")
	endif()
endif()

set(CMAKE_C_FLAGS "${P2K_GENERAL_DEFINES_FLAGS} ${P2K_GENERAL_OPTIMIZATION_FLAGS} ${P2K_GENERAL_C_FLAGS}")
set(CMAKE_CXX_FLAGS "${P2K_GENERAL_DEFINES_FLAGS} ${P2K_GENERAL_OPTIMIZATION_FLAGS} ${P2K_GENERAL_CXX_FLAGS}")
set(CMAKE_ASM_FLAGS "${P2K_GENERAL_ASM_FLAGS}")

set(CMAKE_C_LINK_EXECUTABLE
	"${CMAKE_C_LINK_EXECUTABLE} ${P2K_GENERAL_C_LINK_FLAGS} <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> -o <TARGET>.elf")
set(CMAKE_CXX_LINK_EXECUTABLE
	"${CMAKE_CXX_LINK_EXECUTABLE} ${P2K_GENERAL_CXX_LINK_FLAGS} <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> -o <TARGET>.elf")

set(CMAKE_ASM_CREATE_STATIC_LIBRARY "<CMAKE_AR> --create -cr <TARGET> <OBJECTS>")
set(CMAKE_C_CREATE_STATIC_LIBRARY "<CMAKE_AR> --create -cr <TARGET> <OBJECTS>")
set(CMAKE_CXX_CREATE_STATIC_LIBRARY "<CMAKE_AR> --create -cr <TARGET> <OBJECTS>")

set(CMAKE_ASM_COMPILE_OBJECT "<CMAKE_ASM_COMPILER> <INCLUDES> <FLAGS> -o <OBJECT> <SOURCE>")

include_directories("${P2K_DIRECTORY_HEADERS_SDK}" "${P2K_DIRECTORY_HEADERS_LIBRARIES}")
